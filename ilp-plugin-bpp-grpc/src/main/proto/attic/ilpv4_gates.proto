syntax = "proto3";

package interledger;

service Interledger {
    rpc AddAccount (NewAccountRequest) returns (NewAccountResponse) {}
    //    rpc RemoveAccount(NewAccountRequest) returns (NewAccountResponse) {}
    //    rpc TrackConnection (ConnectionRequest) returns (ConnectionResponse) {}
    //    rpc UntrackConnection (ConnectionRequest) returns (ConnectionResponse) {}
    rpc HandleConnectionChange (ConnectionChangeRequest) returns (ConnectionResponse) {}
    rpc Stream (stream BtpPacket) returns (stream BtpPacket) {}
}

message AccountInfo {
    string relation = 1;
    int32 assetScale = 2;
    string assetCode = 3;
    string plugin = 4;
    AccountOptions options = 5;
}

message AccountOptions {
    AccountOptionsInfo info = 1;
    string account = 2;
    int32 balance = 3;
}

message AccountOptionsInfo {
    string prefix = 1;
}

message NewAccountRequest {
    string id = 1;
    AccountInfo info = 2;
}

message NewAccountResponse {
}

message BtpPacket {
    uint32 requestId = 1;
    int32 type = 2;
    BtpPacketData data = 3;
}

message BtpPacketData {
    repeated BtpSubProtocol protocolData = 1;
    string amount = 2;
    string code = 3;
    string name = 4;
    string triggeredAt = 5;
    string data = 6;
}

message BtpSubProtocol {
    string protocolName = 1;
    int32 contentType = 2;
    bytes data = 3;
}

message HandleDataRequest {
    string accountId = 1;
    bytes buffer = 2;
    string type = 3;
}

message HandleDataResponse{
    bytes buffer = 1;
    string error = 2;
}

message ConnectionRequest{
    string accountId = 1;
}

message ConnectionResponse{
}

message ConnectionChangeRequest{
    string accountId = 1;
    bool isConnected = 2;
}